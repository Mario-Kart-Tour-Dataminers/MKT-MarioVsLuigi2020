//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Hidden/PostProcessing/FinalPass" {
Properties {
}
SubShader {
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 22650
Program "vp" {
SubProgram "metal hw_tier00 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
}
Program "fp" {
SubProgram "metal hw_tier00 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
}
}
}
SubShader {
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 127866
Program "vp" {
SubProgram "metal hw_tier00 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float _DepthSlice;
    float4 _UVTransform;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
    uint mtl_Layer [[ render_target_array_index ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = input.POSITION0.xy;
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    output.mtl_Layer = int(uint(VGlobals._DepthSlice));
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

struct VGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _UVTransform;
    float4 _PosScaleOffset;
};

struct Mtl_VertexIn
{
    float3 POSITION0 [[ attribute(0) ]] ;
};

struct Mtl_VertexOut
{
    float4 mtl_Position [[ position ]];
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]];
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]];
};

vertex Mtl_VertexOut xlatMtlMain(
    constant VGlobals_Type& VGlobals [[ buffer(0) ]],
    Mtl_VertexIn input [[ stage_in ]])
{
    Mtl_VertexOut output;
    float2 u_xlat0;
    output.mtl_Position.xy = fma(input.POSITION0.xy, VGlobals._PosScaleOffset.xy, VGlobals._PosScaleOffset.zw);
    output.mtl_Position.zw = float2(0.0, 1.0);
    u_xlat0.xy = input.POSITION0.xy + float2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * VGlobals._UVTransform.xy;
    u_xlat0.xy = fma(u_xlat0.xy, float2(0.5, 0.5), VGlobals._UVTransform.zw);
    output.TEXCOORD1.xy = u_xlat0.xy * float2(VGlobals._RenderViewportScaleFactor);
    output.TEXCOORD0.xy = u_xlat0.xy;
    return output;
}
"
}
}
Program "fp" {
SubProgram "metal hw_tier00 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float4 _Dithering_Coords;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    half3 u_xlat16_1;
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_0 = clamp(u_xlat16_0, 0.0h, 1.0h);
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + half(1.0);
    u_xlat16_0 = u_xlat16_1.x * u_xlat16_0;
    u_xlat16_1.xyz = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).xyz;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), float3(u_xlat16_1.xyz));
    output.SV_Target0.w = 1.0;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.063000001;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0311999992);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                    u_xlati10.xz = ~u_xlati15.xy;
                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                    if((uint(u_xlati10.x))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat10.xz = u_xlat4.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat10.xz = u_xlat5.xz;
                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                        }
                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                        u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                        u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                        u_xlati10.xz = ~u_xlati15.xy;
                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                        u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                        u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                        if((uint(u_xlati10.x))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat10.xz = u_xlat4.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat10.xz = u_xlat5.xz;
                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                            }
                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                            u_xlati10.xz = ~u_xlati15.xy;
                            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                            if((uint(u_xlati10.x))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat10.xz = u_xlat4.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat10.xz = u_xlat5.xz;
                                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                }
                                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                u_xlati10.xz = ~u_xlati15.xy;
                                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                if((uint(u_xlati10.x))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat10.xz = u_xlat4.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat10.xz = u_xlat5.xz;
                                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                    }
                                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                    u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                    u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                    u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                    u_xlati10.xz = ~u_xlati15.xy;
                                    u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                    u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
                                    u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                    u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
                                    u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                    if((uint(u_xlati10.x))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat10.xz = u_xlat4.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat10.xz = u_xlat5.xz;
                                            u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                            u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                        }
                                        u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                        u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                                        u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                                        u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                                        u_xlati10.xz = ~u_xlati15.xy;
                                        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                                        u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                                        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                                        u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                                        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                                        if((uint(u_xlati10.x))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat10.xz = u_xlat4.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat10.xz = u_xlat5.xz;
                                                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                                                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                                            }
                                            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                                            u_xlat12 = fma((-u_xlat14.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat14.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.x, 8.0, u_xlat5.x);
                                            u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat14.y, 8.0, u_xlat5.z);
                                            u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.063000001;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0311999992);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                    u_xlati5.xy = ~u_xlati15.xy;
                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                    if((uint(u_xlati20))!=uint(0)){
                        if((uint(u_xlati15.x))==uint(0)){
                            u_xlat5.xy = u_xlat4.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        if((uint(u_xlati15.y))==uint(0)){
                            u_xlat5.xy = u_xlat10.xz;
                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                        }
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                        u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                        u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                        u_xlati5.xy = ~u_xlati15.xy;
                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                        u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                        u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                        if((uint(u_xlati20))!=uint(0)){
                            if((uint(u_xlati15.x))==uint(0)){
                                u_xlat5.xy = u_xlat4.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            if((uint(u_xlati15.y))==uint(0)){
                                u_xlat5.xy = u_xlat10.xz;
                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                            }
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                            u_xlati5.xy = ~u_xlati15.xy;
                            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                            if((uint(u_xlati20))!=uint(0)){
                                if((uint(u_xlati15.x))==uint(0)){
                                    u_xlat5.xy = u_xlat4.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                if((uint(u_xlati15.y))==uint(0)){
                                    u_xlat5.xy = u_xlat10.xz;
                                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                }
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                u_xlati5.xy = ~u_xlati15.xy;
                                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                if((uint(u_xlati20))!=uint(0)){
                                    if((uint(u_xlati15.x))==uint(0)){
                                        u_xlat5.xy = u_xlat4.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    if((uint(u_xlati15.y))==uint(0)){
                                        u_xlat5.xy = u_xlat10.xz;
                                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                    }
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                    u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                    u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
                                    u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                    u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
                                    u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                    u_xlati5.xy = ~u_xlati15.xy;
                                    u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                    u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
                                    u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                    u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
                                    u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                    if((uint(u_xlati20))!=uint(0)){
                                        if((uint(u_xlati15.x))==uint(0)){
                                            u_xlat5.xy = u_xlat4.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        if((uint(u_xlati15.y))==uint(0)){
                                            u_xlat5.xy = u_xlat10.xz;
                                            u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                            u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                            u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                        }
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                        u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                        u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                                        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                                        u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                                        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                                        u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                                        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                                        u_xlati5.xy = ~u_xlati15.xy;
                                        u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                                        u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                                        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                                        u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                                        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                                        if((uint(u_xlati20))!=uint(0)){
                                            if((uint(u_xlati15.x))==uint(0)){
                                                u_xlat5.xy = u_xlat4.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            if((uint(u_xlati15.y))==uint(0)){
                                                u_xlat5.xy = u_xlat10.xz;
                                                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                                                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                                                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                                            }
                                            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                                            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                                            u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                                            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                                            u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                                            u_xlat12 = fma((-u_xlat8.x), 8.0, u_xlat4.x);
                                            u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                                            u_xlat12 = fma((-u_xlat8.y), 8.0, u_xlat4.z);
                                            u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.x, 8.0, u_xlat10.x);
                                            u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                                            u_xlat12 = fma(u_xlat8.y, 8.0, u_xlat10.z);
                                            u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float4 u_xlat1;
    float3 u_xlat2;
    bool u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    bool u_xlatb3;
    float3 u_xlat4;
    half u_xlat16_4;
    float3 u_xlat5;
    float2 u_xlat6;
    half u_xlat16_6;
    float u_xlat8;
    int u_xlati8;
    bool2 u_xlatb8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    float2 u_xlat14;
    int2 u_xlati14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float2 u_xlat16;
    float u_xlat18;
    float u_xlat20;
    half u_xlat16_20;
    bool u_xlatb20;
    float u_xlat21;
    half u_xlat16_21;
    float u_xlat22;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1 = float4(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)));
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).w);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).w);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).w);
    u_xlat8 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).w);
    u_xlat14.x = max(u_xlat1.w, u_xlat12);
    u_xlat20 = min(u_xlat1.w, u_xlat12);
    u_xlat14.x = max(u_xlat18, u_xlat14.x);
    u_xlat20 = min(u_xlat18, u_xlat20);
    u_xlat3.x = max(u_xlat8, u_xlat2.x);
    u_xlat9.x = min(u_xlat8, u_xlat2.x);
    u_xlat14.x = max(u_xlat14.x, u_xlat3.x);
    u_xlat20 = min(u_xlat20, u_xlat9.x);
    u_xlat3.x = u_xlat14.x * 0.165999994;
    u_xlat14.x = (-u_xlat20) + u_xlat14.x;
    u_xlat20 = max(u_xlat3.x, 0.0625);
    u_xlatb20 = u_xlat14.x>=u_xlat20;
    if(u_xlatb20){
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).w;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).w;
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).w;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).w;
        u_xlat6.x = u_xlat12 + u_xlat2.x;
        u_xlat15.x = u_xlat18 + u_xlat8;
        u_xlat14.x = float(1.0) / u_xlat14.x;
        u_xlat21 = u_xlat6.x + u_xlat15.x;
        u_xlat6.x = fma(u_xlat1.w, -2.0, u_xlat6.x);
        u_xlat15.x = fma(u_xlat1.w, -2.0, u_xlat15.x);
        u_xlat16_4 = u_xlat16_3 + u_xlat16_9;
        u_xlat16_9 = u_xlat16_20 + u_xlat16_9;
        u_xlat10.x = fma(u_xlat18, -2.0, float(u_xlat16_4));
        u_xlat9.x = fma(u_xlat2.x, -2.0, float(u_xlat16_9));
        u_xlat16_20 = u_xlat16_0 + u_xlat16_20;
        u_xlat16_0 = u_xlat16_3 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat10.x));
        u_xlat3.x = fma(abs(u_xlat15.x), 2.0, abs(u_xlat9.x));
        u_xlat9.x = fma(u_xlat8, -2.0, float(u_xlat16_20));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat9.x);
        u_xlat0.x = u_xlat3.x + abs(u_xlat0.x);
        u_xlat16_20 = u_xlat16_4 + u_xlat16_20;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat21, 2.0, float(u_xlat16_20));
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat8;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.w));
        u_xlat8 = (-u_xlat1.w) + u_xlat2.x;
        u_xlat20 = (-u_xlat1.w) + u_xlat12;
        u_xlat2.x = u_xlat1.w + u_xlat2.x;
        u_xlat12 = u_xlat1.w + u_xlat12;
        u_xlatb3 = abs(u_xlat8)>=abs(u_xlat20);
        u_xlat8 = max(abs(u_xlat20), abs(u_xlat8));
        u_xlat18 = (u_xlatb3) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat14.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat14.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat14.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat9.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat9.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat9.x;
        u_xlat9.y = (u_xlatb0) ? u_xlat9.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat14.xy) + u_xlat9.xy;
        u_xlat5.xy = u_xlat14.xy + u_xlat9.xy;
        u_xlat9.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat15.xy = u_xlat4.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).w;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat16.xy = u_xlat5.xy;
        u_xlat16.xy = clamp(u_xlat16.xy, 0.0f, 1.0f);
        u_xlat16.xy = u_xlat16.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_21 = _MainTex.sample(sampler_MainTex, u_xlat16.xy, level(0.0)).w;
        u_xlat12 = (u_xlatb3) ? u_xlat2.x : u_xlat12;
        u_xlat2.x = u_xlat8 * 0.25;
        u_xlat8 = fma((-u_xlat12), 0.5, u_xlat1.w);
        u_xlat6.x = u_xlat6.x * u_xlat9.x;
        u_xlati8 = int((u_xlat8<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_21));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
        u_xlat16.x = fma((-u_xlat14.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat16.x;
        u_xlat22 = fma((-u_xlat14.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat22;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat22 = fma(u_xlat14.x, 1.5, u_xlat5.x);
        u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
        u_xlat22 = fma(u_xlat14.y, 1.5, u_xlat5.y);
        u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat22;
        if((uint(u_xlati10.x))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat10.xz = u_xlat4.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat10.xz = u_xlat5.xz;
                u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
            }
            u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
            u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
            u_xlat10.x = fma((-u_xlat14.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
            u_xlat10.x = fma((-u_xlat14.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
            u_xlati10.xz = ~u_xlati15.xy;
            u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
            u_xlat22 = fma(u_xlat14.x, 2.0, u_xlat5.x);
            u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
            u_xlat22 = fma(u_xlat14.y, 2.0, u_xlat5.z);
            u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
            if((uint(u_xlati10.x))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat10.xz = u_xlat4.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat10.xz = u_xlat5.xz;
                    u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                    u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                }
                u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                u_xlat15.x = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat15.x;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=u_xlat2.xx)) * 0xFFFFFFFFu);
                u_xlat10.x = fma((-u_xlat14.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat10.x;
                u_xlat10.x = fma((-u_xlat14.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat10.x;
                u_xlati10.xz = ~u_xlati15.xy;
                u_xlati10.x = int(uint(u_xlati10.z) | uint(u_xlati10.x));
                u_xlat22 = fma(u_xlat14.x, 4.0, u_xlat5.x);
                u_xlat5.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat22;
                u_xlat22 = fma(u_xlat14.y, 4.0, u_xlat5.z);
                u_xlat5.z = (u_xlati15.y != 0) ? u_xlat5.z : u_xlat22;
                if((uint(u_xlati10.x))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat10.xz = u_xlat4.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat10.xz = u_xlat5.xz;
                        u_xlat10.xz = clamp(u_xlat10.xz, 0.0f, 1.0f);
                        u_xlat10.xz = u_xlat10.xz * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat10.xz, level(0.0)).w);
                    }
                    u_xlat10.x = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat10.x;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=u_xlat2.xx);
                    u_xlat12 = fma((-u_xlat14.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat14.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat14.x, 12.0, u_xlat5.x);
                    u_xlat5.x = (u_xlatb15.y) ? u_xlat5.x : u_xlat12;
                    u_xlat12 = fma(u_xlat14.y, 12.0, u_xlat5.z);
                    u_xlat5.z = (u_xlatb15.y) ? u_xlat5.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat14.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat14.x;
        u_xlat2.xz = u_xlat5.xz + (-input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? u_xlat2.x : u_xlat2.z;
        u_xlati14.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat3.x = u_xlat12 + u_xlat2.x;
        u_xlatb8.xy = (int2(u_xlati8)!=u_xlati14.xy);
        u_xlat20 = float(1.0) / u_xlat3.x;
        u_xlatb3 = u_xlat12<u_xlat2.x;
        u_xlat12 = min(u_xlat12, u_xlat2.x);
        u_xlatb2 = (u_xlatb3) ? u_xlatb8.x : u_xlatb8.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat20), 0.5);
        u_xlat12 = u_xlatb2 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat0.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_0 = _DitheringTex.sample(sampler_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = fma(u_xlat16_0, half(2.0), half(-1.0));
    u_xlat16_6 = half(fma(float(u_xlat16_0), 3.40282347e+38, 0.5));
    u_xlat16_6 = clamp(u_xlat16_6, 0.0h, 1.0h);
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_0 = -abs(u_xlat16_0) + half(1.0);
    u_xlat16_0 = sqrt(u_xlat16_0);
    u_xlat16_0 = (-u_xlat16_0) + half(1.0);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_6;
    output.SV_Target0.xyz = fma(float3(u_xlat16_0), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = u_xlat1.w;
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_INSTANCING_ENABLED" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier00 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier01 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
SubProgram "metal hw_tier02 " {
Keywords { "FXAA_LOW" "FXAA_KEEP_ALPHA" "STEREO_DOUBLEWIDE_TARGET" }
"#include <metal_stdlib>
#include <metal_texture>
using namespace metal;

#if !(__HAVE_FMA__)
#define fma(a,b,c) ((a) * (b) + (c))
#endif

#ifndef XLT_REMAP_O
	#define XLT_REMAP_O {0, 1, 2, 3, 4, 5, 6, 7}
#endif
constexpr constant uint xlt_remap_o[] = XLT_REMAP_O;
struct FGlobals_Type
{
    float _RenderViewportScaleFactor;
    float4 _Dithering_Coords;
    float4 _MainTex_TexelSize;
};

struct Mtl_FragmentIn
{
    float2 TEXCOORD0 [[ user(TEXCOORD0) ]] ;
    float2 TEXCOORD1 [[ user(TEXCOORD1) ]] ;
};

struct Mtl_FragmentOut
{
    float4 SV_Target0 [[ color(xlt_remap_o[0]) ]];
};

fragment Mtl_FragmentOut xlatMtlMain(
    constant FGlobals_Type& FGlobals [[ buffer(0) ]],
    sampler sampler_DitheringTex [[ sampler (0) ]],
    sampler sampler_MainTex [[ sampler (1) ]],
    texture2d<half, access::sample > _DitheringTex [[ texture(0) ]] ,
    texture2d<half, access::sample > _MainTex [[ texture(1) ]] ,
    Mtl_FragmentIn input [[ stage_in ]])
{
    Mtl_FragmentOut output;
    float2 u_xlat0;
    half u_xlat16_0;
    bool u_xlatb0;
    float3 u_xlat1;
    float2 u_xlat2;
    int u_xlati2;
    bool2 u_xlatb2;
    float2 u_xlat3;
    half u_xlat16_3;
    float3 u_xlat4;
    float2 u_xlat5;
    int2 u_xlati5;
    float2 u_xlat6;
    half u_xlat16_6;
    float2 u_xlat8;
    int2 u_xlati8;
    float2 u_xlat9;
    half u_xlat16_9;
    float3 u_xlat10;
    int3 u_xlati10;
    float u_xlat12;
    half u_xlat16_12;
    float u_xlat14;
    half u_xlat16_14;
    bool u_xlatb14;
    float2 u_xlat15;
    half u_xlat16_15;
    int2 u_xlati15;
    bool2 u_xlatb15;
    float u_xlat18;
    float u_xlat19;
    bool u_xlatb19;
    float u_xlat20;
    half u_xlat16_20;
    int u_xlati20;
    bool u_xlatb20;
    half u_xlat16_21;
    u_xlat0.xy = input.TEXCOORD0.xy;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0f, 1.0f);
    u_xlat0.xy = u_xlat0.xy * float2(FGlobals._RenderViewportScaleFactor);
    u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    u_xlat12 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, 1)).y);
    u_xlat18 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 0)).y);
    u_xlat19 = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(0, -1)).y);
    u_xlat2.x = float(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 0)).y);
    u_xlat8.x = max(u_xlat1.y, u_xlat12);
    u_xlat14 = min(u_xlat1.y, u_xlat12);
    u_xlat8.x = max(u_xlat18, u_xlat8.x);
    u_xlat14 = min(u_xlat18, u_xlat14);
    u_xlat20 = max(u_xlat19, u_xlat2.x);
    u_xlat3.x = min(u_xlat19, u_xlat2.x);
    u_xlat8.x = max(u_xlat8.x, u_xlat20);
    u_xlat14 = min(u_xlat14, u_xlat3.x);
    u_xlat20 = u_xlat8.x * 0.165999994;
    u_xlat8.x = (-u_xlat14) + u_xlat8.x;
    u_xlat14 = max(u_xlat20, 0.0625);
    u_xlatb14 = u_xlat8.x>=u_xlat14;
    if(u_xlatb14){
        u_xlat16_14 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, -1)).y;
        u_xlat16_20 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, 1)).y;
        u_xlat16_3 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(1, -1)).y;
        u_xlat16_0 = _MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0), int2(-1, 1)).y;
        u_xlat6.x = u_xlat12 + u_xlat19;
        u_xlat9.x = u_xlat18 + u_xlat2.x;
        u_xlat8.x = float(1.0) / u_xlat8.x;
        u_xlat15.x = u_xlat6.x + u_xlat9.x;
        u_xlat6.x = fma(u_xlat1.y, -2.0, u_xlat6.x);
        u_xlat9.x = fma(u_xlat1.y, -2.0, u_xlat9.x);
        u_xlat16_21 = u_xlat16_20 + u_xlat16_3;
        u_xlat16_3 = u_xlat16_14 + u_xlat16_3;
        u_xlat4.x = fma(u_xlat18, -2.0, float(u_xlat16_21));
        u_xlat3.x = fma(u_xlat19, -2.0, float(u_xlat16_3));
        u_xlat16_14 = u_xlat16_0 + u_xlat16_14;
        u_xlat16_0 = u_xlat16_20 + u_xlat16_0;
        u_xlat6.x = fma(abs(u_xlat6.x), 2.0, abs(u_xlat4.x));
        u_xlat20 = fma(abs(u_xlat9.x), 2.0, abs(u_xlat3.x));
        u_xlat3.x = fma(u_xlat2.x, -2.0, float(u_xlat16_14));
        u_xlat0.x = fma(u_xlat12, -2.0, float(u_xlat16_0));
        u_xlat6.x = u_xlat6.x + abs(u_xlat3.x);
        u_xlat0.x = u_xlat20 + abs(u_xlat0.x);
        u_xlat16_14 = u_xlat16_21 + u_xlat16_14;
        u_xlatb0 = u_xlat6.x>=u_xlat0.x;
        u_xlat6.x = fma(u_xlat15.x, 2.0, float(u_xlat16_14));
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat2.x;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat18;
        u_xlat18 = (u_xlatb0) ? FGlobals._MainTex_TexelSize.y : FGlobals._MainTex_TexelSize.x;
        u_xlat6.x = fma(u_xlat6.x, 0.0833333358, (-u_xlat1.y));
        u_xlat2.x = (-u_xlat1.y) + u_xlat19;
        u_xlat14 = (-u_xlat1.y) + u_xlat12;
        u_xlat19 = u_xlat1.y + u_xlat19;
        u_xlat12 = u_xlat1.y + u_xlat12;
        u_xlatb20 = abs(u_xlat2.x)>=abs(u_xlat14);
        u_xlat2.x = max(abs(u_xlat14), abs(u_xlat2.x));
        u_xlat18 = (u_xlatb20) ? (-u_xlat18) : u_xlat18;
        u_xlat6.x = u_xlat8.x * abs(u_xlat6.x);
        u_xlat6.x = clamp(u_xlat6.x, 0.0f, 1.0f);
        u_xlat8.x = u_xlatb0 ? FGlobals._MainTex_TexelSize.x : float(0.0);
        u_xlat8.y = (u_xlatb0) ? 0.0 : FGlobals._MainTex_TexelSize.y;
        u_xlat3.xy = fma(float2(u_xlat18), float2(0.5, 0.5), input.TEXCOORD0.xy);
        u_xlat3.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat3.x;
        u_xlat3.y = (u_xlatb0) ? u_xlat3.y : input.TEXCOORD0.y;
        u_xlat4.xy = (-u_xlat8.xy) + u_xlat3.xy;
        u_xlat5.xy = u_xlat8.xy + u_xlat3.xy;
        u_xlat3.x = fma(u_xlat6.x, -2.0, 3.0);
        u_xlat9.xy = u_xlat4.xy;
        u_xlat9.xy = clamp(u_xlat9.xy, 0.0f, 1.0f);
        u_xlat9.xy = u_xlat9.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_9 = _MainTex.sample(sampler_MainTex, u_xlat9.xy, level(0.0)).y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat15.xy = u_xlat5.xy;
        u_xlat15.xy = clamp(u_xlat15.xy, 0.0f, 1.0f);
        u_xlat15.xy = u_xlat15.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat16_15 = _MainTex.sample(sampler_MainTex, u_xlat15.xy, level(0.0)).y;
        u_xlat12 = (u_xlatb20) ? u_xlat19 : u_xlat12;
        u_xlat19 = u_xlat2.x * 0.25;
        u_xlat2.x = fma((-u_xlat12), 0.5, u_xlat1.y);
        u_xlat6.x = u_xlat6.x * u_xlat3.x;
        u_xlati2 = int((u_xlat2.x<0.0) ? 0xFFFFFFFFu : uint(0));
        u_xlat3.x = fma((-u_xlat12), 0.5, float(u_xlat16_9));
        u_xlat3.y = fma((-u_xlat12), 0.5, float(u_xlat16_15));
        u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
        u_xlat20 = fma((-u_xlat8.x), 1.5, u_xlat4.x);
        u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
        u_xlat20 = fma((-u_xlat8.y), 1.5, u_xlat4.y);
        u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.y : u_xlat20;
        u_xlati10.xz = ~u_xlati15.xy;
        u_xlati20 = int(uint(u_xlati10.z) | uint(u_xlati10.x));
        u_xlat10.x = fma(u_xlat8.x, 1.5, u_xlat5.x);
        u_xlat10.x = (u_xlati15.y != 0) ? u_xlat5.x : u_xlat10.x;
        u_xlat5.x = fma(u_xlat8.y, 1.5, u_xlat5.y);
        u_xlat10.z = (u_xlati15.y != 0) ? u_xlat5.y : u_xlat5.x;
        if((uint(u_xlati20))!=uint(0)){
            if((uint(u_xlati15.x))==uint(0)){
                u_xlat5.xy = u_xlat4.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            if((uint(u_xlati15.y))==uint(0)){
                u_xlat5.xy = u_xlat10.xz;
                u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
            }
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
            u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
            u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
            u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
            u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
            u_xlat20 = fma((-u_xlat8.x), 2.0, u_xlat4.x);
            u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
            u_xlat20 = fma((-u_xlat8.y), 2.0, u_xlat4.z);
            u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
            u_xlati5.xy = ~u_xlati15.xy;
            u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
            u_xlat5.x = fma(u_xlat8.x, 2.0, u_xlat10.x);
            u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
            u_xlat5.x = fma(u_xlat8.y, 2.0, u_xlat10.z);
            u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
            if((uint(u_xlati20))!=uint(0)){
                if((uint(u_xlati15.x))==uint(0)){
                    u_xlat5.xy = u_xlat4.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                if((uint(u_xlati15.y))==uint(0)){
                    u_xlat5.xy = u_xlat10.xz;
                    u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                    u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                    u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                }
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.y);
                u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat20;
                u_xlati15.xy = int2(uint2((abs(u_xlat3.xy)>=float2(u_xlat19))) * 0xFFFFFFFFu);
                u_xlat20 = fma((-u_xlat8.x), 4.0, u_xlat4.x);
                u_xlat4.x = (u_xlati15.x != 0) ? u_xlat4.x : u_xlat20;
                u_xlat20 = fma((-u_xlat8.y), 4.0, u_xlat4.z);
                u_xlat4.z = (u_xlati15.x != 0) ? u_xlat4.z : u_xlat20;
                u_xlati5.xy = ~u_xlati15.xy;
                u_xlati20 = int(uint(u_xlati5.y) | uint(u_xlati5.x));
                u_xlat5.x = fma(u_xlat8.x, 4.0, u_xlat10.x);
                u_xlat10.x = (u_xlati15.y != 0) ? u_xlat10.x : u_xlat5.x;
                u_xlat5.x = fma(u_xlat8.y, 4.0, u_xlat10.z);
                u_xlat10.z = (u_xlati15.y != 0) ? u_xlat10.z : u_xlat5.x;
                if((uint(u_xlati20))!=uint(0)){
                    if((uint(u_xlati15.x))==uint(0)){
                        u_xlat5.xy = u_xlat4.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.x = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    if((uint(u_xlati15.y))==uint(0)){
                        u_xlat5.xy = u_xlat10.xz;
                        u_xlat5.xy = clamp(u_xlat5.xy, 0.0f, 1.0f);
                        u_xlat5.xy = u_xlat5.xy * float2(FGlobals._RenderViewportScaleFactor);
                        u_xlat3.y = float(_MainTex.sample(sampler_MainTex, u_xlat5.xy, level(0.0)).y);
                    }
                    u_xlat20 = fma((-u_xlat12), 0.5, u_xlat3.x);
                    u_xlat3.x = (u_xlati15.x != 0) ? u_xlat3.x : u_xlat20;
                    u_xlat12 = fma((-u_xlat12), 0.5, u_xlat3.y);
                    u_xlat3.y = (u_xlati15.y != 0) ? u_xlat3.y : u_xlat12;
                    u_xlatb15.xy = (abs(u_xlat3.xy)>=float2(u_xlat19));
                    u_xlat12 = fma((-u_xlat8.x), 12.0, u_xlat4.x);
                    u_xlat4.x = (u_xlatb15.x) ? u_xlat4.x : u_xlat12;
                    u_xlat12 = fma((-u_xlat8.y), 12.0, u_xlat4.z);
                    u_xlat4.z = (u_xlatb15.x) ? u_xlat4.z : u_xlat12;
                    u_xlat12 = fma(u_xlat8.x, 12.0, u_xlat10.x);
                    u_xlat10.x = (u_xlatb15.y) ? u_xlat10.x : u_xlat12;
                    u_xlat12 = fma(u_xlat8.y, 12.0, u_xlat10.z);
                    u_xlat10.z = (u_xlatb15.y) ? u_xlat10.z : u_xlat12;
                }
            }
        }
        u_xlat12 = (-u_xlat4.x) + input.TEXCOORD0.x;
        u_xlat19 = u_xlat10.x + (-input.TEXCOORD0.x);
        u_xlat8.x = (-u_xlat4.z) + input.TEXCOORD0.y;
        u_xlat12 = (u_xlatb0) ? u_xlat12 : u_xlat8.x;
        u_xlat8.x = u_xlat10.z + (-input.TEXCOORD0.y);
        u_xlat19 = (u_xlatb0) ? u_xlat19 : u_xlat8.x;
        u_xlati8.xy = int2(uint2((u_xlat3.xy<float2(0.0, 0.0))) * 0xFFFFFFFFu);
        u_xlat20 = u_xlat12 + u_xlat19;
        u_xlatb2.xy = (int2(u_xlati2)!=u_xlati8.xy);
        u_xlat14 = float(1.0) / u_xlat20;
        u_xlatb20 = u_xlat12<u_xlat19;
        u_xlat12 = min(u_xlat12, u_xlat19);
        u_xlatb19 = (u_xlatb20) ? u_xlatb2.x : u_xlatb2.y;
        u_xlat6.x = u_xlat6.x * u_xlat6.x;
        u_xlat12 = fma(u_xlat12, (-u_xlat14), 0.5);
        u_xlat12 = u_xlatb19 ? u_xlat12 : float(0.0);
        u_xlat6.x = max(u_xlat6.x, u_xlat12);
        u_xlat6.xy = fma(u_xlat6.xx, float2(u_xlat18), input.TEXCOORD0.xy);
        u_xlat2.x = (u_xlatb0) ? input.TEXCOORD0.x : u_xlat6.x;
        u_xlat2.x = clamp(u_xlat2.x, 0.0f, 1.0f);
        u_xlat2.y = (u_xlatb0) ? u_xlat6.y : input.TEXCOORD0.y;
        u_xlat2.y = clamp(u_xlat2.y, 0.0f, 1.0f);
        u_xlat0.xy = u_xlat2.xy * float2(FGlobals._RenderViewportScaleFactor);
        u_xlat1.xyz = float3(_MainTex.sample(sampler_MainTex, u_xlat0.xy, level(0.0)).xyz);
    }
    u_xlat16_0 = _MainTex.sample(sampler_MainTex, input.TEXCOORD1.xy).w;
    u_xlat6.xy = fma(input.TEXCOORD0.xy, FGlobals._Dithering_Coords.xy, FGlobals._Dithering_Coords.zw);
    u_xlat16_6 = _DitheringTex.sample(sampler_DitheringTex, u_xlat6.xy).w;
    u_xlat16_6 = fma(u_xlat16_6, half(2.0), half(-1.0));
    u_xlat16_12 = half(fma(float(u_xlat16_6), 3.40282347e+38, 0.5));
    u_xlat16_12 = clamp(u_xlat16_12, 0.0h, 1.0h);
    u_xlat16_12 = fma(u_xlat16_12, half(2.0), half(-1.0));
    u_xlat16_6 = -abs(u_xlat16_6) + half(1.0);
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat16_6 = (-u_xlat16_6) + half(1.0);
    u_xlat16_6 = u_xlat16_6 * u_xlat16_12;
    output.SV_Target0.xyz = fma(float3(u_xlat16_6), float3(0.00392156886, 0.00392156886, 0.00392156886), u_xlat1.xyz);
    output.SV_Target0.w = float(u_xlat16_0);
    return output;
}
"
}
}
}
}
SubShader {
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 171816
}
}
SubShader {
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 249884
Program "vp" {
}
Program "fp" {
}
}
}
}